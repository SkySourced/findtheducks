name: publish

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/skysourced/findtheducks:latest

jobs:
    build:
      permissions: write-all
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Bump version and push tag
          id: tag_version
          uses: mathieudutour/github-tag-action@v6.1
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
        - name: Create a GitHub release
          uses: ncipollo/release-action@v1
          with:
            tag: ${{ steps.tag_version.outputs.new_tag }}
            name: Release ${{ steps.tag_version.outputs.new_tag }}
            body: ${{ steps.tag_version.outputs.changelog }}
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: |
              ghcr.io/skysourced/findtheducks
            tags: |
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
        - name: Login to GHCR
          if: github.event_name != 'pull_request'
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.PAT }}
        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            context: .
            push: ${{ github.event_name != 'pull_request' }}
            tags: ghcr.io/skysourced/findtheducks:${{ steps.tag_version.outputs.new_tag }}, ${{ steps.meta.outputs.tags }}, ${{ env.IMAGE_NAME }}

#    deploy:
#        needs: build
#        name: deploy image
#        runs-on: ubuntu-latest
#
#        steps:
#        - name: install ssh keys
#          # check this thread to understand why its needed:
#          # <https://stackoverflow.com/a/70447517>
#          run: |
#            install -m 600 -D /dev/null ~/.ssh/id_rsa
#            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#            ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
#        - name: connect and pull
#          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
#        - name: cleanup
#          run: rm -rf ~/.ssh
